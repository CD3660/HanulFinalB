<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="qna">




<!-- 안드로이드 Q&A 목록 조회  -->
<select id="appQnaList" resultType="qnaVO">

select ( select count(*) from qna_file f where f.qna_id = q1.qna_id ) filecnt, q1.*
from ( select q.*, name, row_number() over(order by root, step desc) no
		from qna q left outer join users u on q.writer = u.user_id ) q1
order by no desc

</select>


<!-- 안드로이드 코멘트 목록 조회 -->
<select id="appQnaCommentList" resultType="commentVO">
select name, c.* 
from qna_comment c left outer join users u 
						on c.writer = u.user_id
where qna_id = #{qna_id}
order by writedate desc
</select>














<!-- 답글등록  -->
<insert id="replyRegister">
insert into qna ( title, content, writer, root, step, indent, rid)
values ( #{title}, #{content}, #{writer},
		 #{root}, #{step}+1, #{indent}+1, #{rid} ) 
</insert>






<!-- 신규 글저장  -->
<insert id="register">

 <selectKey keyProperty="qna_id" resultType="integer" order="AFTER">
	select seq_qna.currval from dual
 </selectKey>

insert into qna ( title, content, writer )
values ( #{title}, #{content}, #{writer} )
</insert>


<!-- 첨부파일 저장 -->
<insert id="fileInsert">
	<foreach collection="fileList" item="file" open="insert all" 
							separator=" " close="select * from dual">
		into qna_file ( qna_id, filename, file_id )
		values ( #{qna_id}, #{file.filename}, #{file.file_id} )
	</foreach>
</insert>



<!-- 첨부파일목록 조회  -->
<select id="fileList" resultType="fileVO">
select q.*, #{url} || file_id filepath from qna_file q where qna_id = #{qna_id}
</select>


<!-- 첨부파일정보 조회 -->
<select id="fileInfo" resultType="fileVO">
select * from qna_file where file_id = #{file_id}
</select>



<!-- 삭제할 첨부파일목록 조회 -->
<select id="removeFileList" resultType="fileVO">
select * from qna_file where file_id in ( ${remove} ) 
</select>

<!-- 첨부파일삭제 -->
<delete id="fileDelete">
delete from qna_file where file_id in ( ${remove} )
</delete>












<!-- 총 글건수 조회 -->
	<select id="totalList" resultType="integer">
	select count(qna_id) from qna <include refid="searchWhere"/>
	</select>


<!-- 검색조건 -->
<sql id="searchWhere">
<choose>
	<!-- 전체  -->
	<when test=" search == 's1' "> 
	where title like '%' || #{keyword} || '%'
	or content  like '%' || #{keyword} || '%'
	or writer in ( select user_id from users where name like '%' || #{keyword} || '%' )
	</when>

	<!-- 제목  -->
	<when test=" search == 's2' ">
	where title like '%' || #{keyword} || '$'
	</when>
	
	<!-- 제목 + 내용  -->
	<when test=" search == 's3' ">
	where title like '%' || #{keyword} || '$'
	or content  like '%' || #{keyword} || '%'
	</when>
	
	<!-- 내용 -->
	<when test=" search == 's3' "> 
	where content like '%' || #{keyword} || '%'
	</when>
	
	<!-- 작성자  -->
	<when test=" search == 's4' ">
	where writer in ( select user_id from users where name like '%' || #{keyword} || '%' )
	</when>

</choose>
</sql>



<!-- qna 글목록 조회 /해당페이지의 10건의 정보목록 조회 -->
<select id="list" resultType="qnaVO">
select to_char(q1.writedate, 'yyyy-mm-dd') writedate, ( select count(*) from qna_file f where f.qna_id = q1.qna_id ) filecnt, q1.*
from ( select q.*, name, row_number() over(order by root, step desc) no
		from qna q left outer join users u on q.writer = u.user_id <include refid="searchWhere"/> ) q1
where no between #{beginList} and #{endList}
order by no desc

</select>




<!-- 조회수변경 -->
<update id="read">
update qna set readcnt = readcnt + 1
where qna_id = #{qna_id} 
</update>



<!-- Q&A 글정보 조회 -->
<select id="info" resultType="qnaVO">
select (select writer from qna where qna_id = q.root) root_writer, q.*, u.* 
from qna q left outer join users u
on q.writer = u.user_id
where qna_id =#{qna_id}
</select>





<!-- Q&A글 삭제 -->
<delete id="delete">
delete from qna where qna_id = #{qna_id}
</delete>





<!-- Q&A글 변경 저장  -->
<update id="update">
update qna set title = #{title}, content = #{content}
where qna_id = #{qna_id}
</update>














<!-- 댓글목록조회  -->  
<select id="commentList" resultType="commentVO">
select name, profile, c.* 
from qna_comment c left outer join users u 
						on c.writer = u.user_id
where qna_id = #{qna_id}
order by writedate desc
</select>





<!-- 댓글신규저장  -->
<insert id="commentRegister">
insert into qna_comment ( qna_id, content, writer )
values ( #{qna_id}, #{content}, #{writer} )
</insert>



<!-- 댓글변경저장  -->
<update id="commentUpdate">
update qna_comment
set content = #{content}
where comment_id = #{comment_id}
</update>



<!-- 댓글삭제  -->
<delete id="commentDelete">
delete from qna_comment
where comment_id = #{comment_id}
</delete>








</mapper>